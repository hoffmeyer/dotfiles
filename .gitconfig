[alias]
    st = status
    co = checkout
    pr = pull --rebase
    ec = config --global -e
    cob = checkout -b
    cm = !git add -A && git commit -m
    # show log as one lines 
    lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
    save = !git add -A && git commit -m 'SAVEPOINT'
    undo = reset HEAD~1 --mixed
    amend = commit -a --amend
    # show changes from origin
    changes = log HEAD.. origin --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
    # show all remote branches and how old their newest commit is
    branchAges = for-each-ref --sort=committerdate refs/remotes/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(authorname)%(color:reset) -(%(color:green)%(committerdate:relative)%(color:reset))'
    # what is my recent branches
    recent = for-each-ref --count=10 --sort=-committerdate refs/heads/ --format="%(refname:short)"
    # what have I done today
    today = log --since=00:00:00 --all --no-merges --oneline --author=flemming@festinafinance.com
    # find the oldest common ancestor of two commits
    oldest-ancestor = !zsh -c 'diff --old-line-format= --new-line-format= <(git rev-list --first-parent \"${1:-master}\") <(git rev-list --first-parent \"${2:-HEAD}\") | head -1' -
    # list all my commits on specific date
    mywork = "!f() { git log --after=\"$1 00:00\" --before=\"$1 23:59\" --all --author \"$(git config --get user.name)\" --pretty=oneline; }; f"
[merge]
	keepBackup = false
	conflictstyle = diff3
	tool = p4merge
[mergetool]
	keepBackup = false
[user]
	email = flemming@festinafinance.com
	name = Flemming Hoffmeyer
[diff]
	tool = p4merge
[difftool "p4merge"]
	path = C:\\Program Files\\Perforce\\p4merge.exe
[mergetool "p4merge"]
	path = C:\\Program Files\\Perforce\\p4merge.exe
[gui]
	recentrepo = C:/festina/pd-ff-client
[maintenance]
	repo = C:/festina/ffapp
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
